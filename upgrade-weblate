#!/bin/sh

set -e

cd /tmp

# Detect user
for u in weblate ec2-user ; do
    if id $u > /dev/null 2>&1 ; then
        USERNAME=$u
    fi
done
if [ -z "$USERNAME" ] ; then
    echo "Could not detect username!"
fi

WEBLATE_HOME=$(getent passwd "$USERNAME" | cut -d\: -f 6)

# Stop web
systemctl stop uwsgi.service

WEBLATE_ENV="$WEBLATE_HOME/weblate-env"

PYVER=$($WEBLATE_ENV/bin/python -c 'import sys; print("{}.{}".format(*sys.version_info[:2]))')

if [ -d "$WEBLATE_HOME/weblate" ] ; then
    WEBLATE_DIR="$WEBLATE_HOME/weblate"
    WEBLATE_PKG="$WEBLATE_DIR"
    PIP_ARGS="--editable"
else
    WEBLATE_DIR="$WEBLATE_ENV/lib/python$PYVER/site-packages"
    WEBLATE_PKG="Weblate"
    PIP_ARGS=""
fi

# Wait for celery to process all jobs
while sudo -u $USERNAME $WEBLATE_ENV/bin/weblate celery_queues | grep ': [^0]' ; do
    sleep 1
done

# Stop celery
systemctl stop celery-weblate.service

# Backup settings
cp $WEBLATE_DIR/weblate/settings.py /root/weblate-settings-$(date -I).py

# Upgrade modules
sudo -u $USERNAME $WEBLATE_ENV/bin/pip install -U pip
if [ "$WEBLATE_DIR" = "$WEBLATE_HOME/weblate" ] ; then
    sudo -u $USERNAME sh -c "cd $WEBLATE_DIR; git pull"
fi
sudo -u $USERNAME $WEBLATE_ENV/bin/pip install --upgrade-strategy eager --upgrade $PIP_ARGS $WEBLATE_PKG[all] wllegal

# Adjust configuration
if [ "x$1" != "x--nodiff" ] ; then
vimdiff $WEBLATE_DIR/weblate/settings_example.py $WEBLATE_DIR/weblate/settings.py
fi
sed s@/home/weblate/weblate-env@$WEBLATE_ENV@ $WEBLATE_DIR/weblate/examples/celery-weblate.conf > /etc/default/celery-weblate

# Migrate database, compile gettext and collect static files
sudo -u $USERNAME $WEBLATE_ENV/bin/weblate migrate
sudo -u $USERNAME $WEBLATE_ENV/bin/weblate ensure_stats
sudo -u $USERNAME $WEBLATE_ENV/bin/weblate collectstatic --noinput
sudo -u $USERNAME $WEBLATE_ENV/bin/weblate compress --force
if [ "$WEBLATE_DIR" = "$WEBLATE_HOME/weblate" ] ; then
    sudo -u $USERNAME sh -c "cd $WEBLATE_DIR; $WEBLATE_ENV/bin/weblate compilemessages"
    if [ -d $WEBLATE_HOME/hosted ] ; then
        sudo -u $USERNAME sh -c "cd $WEBLATE_HOME/hosted; git pull -q; $WEBLATE_ENV/bin/weblate compilemessages"
    fi
fi
# Track deploy at Sentry
if ! grep -q "SENTRY_TOKEN = ''" $WEBLATE_DIR/weblate/settings.py ; then
    sudo -u $USERNAME $WEBLATE_ENV/bin/weblate sentry_deploy
fi

# Start the services
systemctl start celery-weblate.service
systemctl start uwsgi.service

# Upgrade munin plugin
if [ -d /usr/share/munin/plugins ] ; then
    wget -O - https://raw.githubusercontent.com/WeblateOrg/munin/master/weblate > /usr/share/munin/plugins/weblate
    wget -O - https://raw.githubusercontent.com/WeblateOrg/munin/master/ksm > /usr/share/munin/plugins/ksm
fi

# Upgrade fail2ban
if [ -d /etc/fail2ban/filter.d/ ] ; then
    sudo -u $USERNAME sh -c "cd $WEBLATE_HOME/fail2ban && git pull"
    ln -sf $WEBLATE_HOME/fail2ban/filter.d/* /etc/fail2ban/filter.d/
    ln -sf $WEBLATE_HOME/fail2ban/jail.d/* /etc/fail2ban/jail.d/
    systemctl reload fail2ban.service
fi
